type User {
  id: Int!
  name: String!
  email: String!
  age: Int
}

type Address {
  city: String!
  country: String!
}

type Customer {
  companyName: String!
  address: Address!
}

type Person {
  nickname: String!
  avatar: Image!
}

type Image {
  url: String!
  size: String!
}

type Query {
  users: [User!]!
  user(id: Int!): User!
  customer: [Customer!]!
  personnn: [Person!]!
}


# Фронт: npm run dev

# Write your query or mutation here
# query {
#   users {
#     id
#     name
#     email
#     age
#   }
# }

# query {
#   user(id: 1) {
#     id
#     name
#     email
#     age
#   }
# }


# query CustomerScreen {
#   customer {
#     companyName
#     address {
#       city
#       country
#     }
#   }
# }

# query CustomerScreen {
#   customer {
#     ...CustomerCard
#   }
# }

# fragment CustomerCard on Customer {
#   companyName
#   address {
#     city
#     country
#   }
# }

# Пример того, как объединять фрагменты,
# Смысл фрагментов в том, чтобы переиспользовать код с привязкой к query

#fragment CoreImage_data on Image {
#  url
#  size
#}
#
#fragment PersonProfile on Person {
#  nickname
#  avatar {
#    ...CoreImage_data
#  }
#}
#
#
#query CustomerScreen {
#  personnn {
#    ...PersonProfile
#  }
#}

